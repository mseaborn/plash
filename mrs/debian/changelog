plash (1.5) unstable; urgency=low

  * Updated protocols.txt to cover object-capability protocol,
    conn_maker and fs_op_maker.
  * Created `chroot' program as a test and example.
  * Introduced conn_maker and fs_ops_maker objects.  Change the shell
    to start processes with references to these.  Rename COMM_FD to
    PLASH_COMM_FD and introduce PLASH_CAPS; libc now reads these to
    find the indexes of its capabilities, rather than just using
    index 0.  Introduce `copy' method to fs_ops.  Change fork() to use
    this instead of fs_op's fork method.
  * build-fs.c:  now uses read-only proxies.  Changed the resolver so
    that `.' and `/' can be attached as writable.
  * Added filesysobj-readonly.c: provides read-only proxies for
    filesystem objects.  One proxy type is sufficient to handle files,
    directories and symlinks.
  * cap-protocol.c:  Fix uses of stale connection references.
    remote_obj_invoke() now correctly frees its arguments for broken
    connections, so calls to broken connections will return an error.

 -- Mark Seaborn <mseaborn@jhu.edu>  Fri,  7 Jan 2005 15:32:16 +0000

plash (1.4) unstable; urgency=low

  * Implemented an object-capability protocol for use over sockets.
    This is another layer that I have put between the existing
    filesystem requests and the comms.c layer.  It allows references
    to objects to be transferred.  It's symmetric: the core protocol
    does not distinguish between the client and the server.  The
    ability to transfer references is not used yet, but in the future
    it will provide a way for applications to construct filesystem
    structures on the server.  A C API will be provided to do this.

 -- Mark Seaborn <mseaborn@jhu.edu>  Mon,  3 Jan 2005 22:42:21 +0000

plash (1.3) unstable; urgency=low

  * Implemented FD redirection in the shell.
  * Implemented rename() and link() for the same-directory case.
    (The cross-directory case is trickier, 1. because it's hard to do
    under Unix without race conditions in the presence of symlinks, and
    2. it's complicated by directory proxy objects.)
  * Improved one-line logging in the server.  Every call to the server
    now produces a log line (though some are not fully filled out).
  * Implemented bind().
  * Implemented symlink() and utime()/utimes().
  * Changed getuid() and getgid() so that they can take the uid/gid from
    the environment variables PLASH_FAKE_UID/GID.  Some programs cannot
    cope when they have a uid that does not have an entry in /etc/passwd.
  * Added run-as-anonymous.
  * Implemented globbing in the shell.  Pathnames now have structure in
    the grammar; their components are separated by the parser.
    When a pathname doesn't contain any wildcards, it is converted back
    into a string.  It is canonicalised in the process; duplicate '/'s
    are collapsed.
  * Fixed FD leak:  the fabricated directory structure is now freed.

 -- Mark Seaborn <mseaborn@jhu.edu>  Wed, 29 Dec 2004 17:10:41 +0000

plash (1.2) unstable; urgency=low

  * Added support for `#!' scripts (to both the shell and the server).
  * Add the ability to run programs conventionally with the `!!' prefix.
  * Add pipes.
  * Fix bug in server that caused it to ignore processes when there are
    multiple processes.
  * Added options window that can be used to turn debugging output on.
    Can be opened using the "opts" command.
  * Build libpthread.so so that it doesn't contain filesystem syscalls.
    The relevant functions are now forwarded to libc.so.
  * Remove glibc's io/open64.os from the link.  This includes a syscall,
    but didn't in an earlier glibc.  This is a rather embarrassing bug
    because it shows I didn't do much testing -- even cat uses open64().

 -- Mark Seaborn <mseaborn@jhu.edu>  Fri, 17 Dec 2004 04:15:08 +0000

plash (1.1) unstable; urgency=low

  * Added job control.

 -- Mark Seaborn <mseaborn@jhu.edu>  Fri, 10 Dec 2004 04:15:08 +0000

plash (1.0) unstable; urgency=low

  * Initial release.

 -- Mark Seaborn <mseaborn@jhu.edu>  Thu,  2 Dec 2004 04:15:08 +0000
