
\html:
{\head:

  \title- Plash: the Principle of Least Authority shell

  \link rel=stylesheet href={stylesheet.css};
}
\body:

{\table width={100%}:
  \tr:
  {\td align=left:
    \h1\img src={logo.png} alt={Plash};
    \h2- Plash: the Principle of Least Authority shell
  }
  {\td align=right:
    \a href={html/index.html}- Documentation
    \br;
    \a href={#download}- Download
    \br;
    \a href={http://lists.nongnu.org/mailman/listinfo/plash}- Mailing list
  }
}

\hr;

\p~ Plash is a secure, restricted execution environment for running
Linux programs with the minimum necessary privileges.  It is similar
to chroot jails, but is more lightweight and flexible.  You can use
Plash to grant a process read-only or read-write access to specific
files and directories, which can be mapped at any point in its private
filesystem namespace.

\p~ Plash's purpose is to protect you from the programs you run,
whether they are malicious, are vulnerable to compromise from external
attacks, or just behave unexpectedly.

\p~ Plash provides three interfaces:

{\ul:

  {\li: {\a href={html/pola-run.html}: \tt: pola-run}, a command line
  tool for starting a program with a subset of the calling process's
  authority.}

  {\li: The {\a href={html/shell.html}: Plash shell}, which has a
  syntax similar to the Bourne shell or Bash.  Unlike Bash, it
  distinguishes string arguments and file arguments, because it needs
  to know which files to grant to the program being invoked.  By
  default, the shell grants only read-only access to files and
  directories.  There is extra syntax for granting read-write-create
  access.

  The Plash shell has a compact syntax and is intended for interactive
  use.  In contrast, {\tt:pola-run} has a more verbose syntax which is
  intended to be used from Bash scripts and other programs.}

  {\li: {\a href={html/run-emacs.html}: \tt: run-emacs} is a tool for
  running XEmacs and then dynamically granting it access to individual
  files and directories.  In the future, this functionality will be
  generalised to be available for other GUI programs.}

}

\p~ The Plash execution environment doesn't require a modified Linux
kernel -- it uses {\tt:chroot()} and UIDs.  It works with existing
Linux executables, provided they are dynamically linked, because Plash
uses a modified version of GNU libc.

\p~ Plash virtualizes the filesystem.  With the modified libc,
{\tt:open()} works by sending a request across a socket.  The server
process can send a file descriptor back across the socket in response.
Usually, Plash does not slow programs down because the most frequently
used system calls (such as {\tt:read()} and {\tt:write()}) work on
kernel-level file descriptors as before.


\hr;


\h2- News

\h3- Version 1.15

\p~ This release introduces {\a href={powerbox/}: a patch to Gtk that
changes GtkFileChooserDialog to use Plash's powerbox}.  This provides
a mechanism, transparent to the user, for granting Gtk applications
access to specific files, so that the user does not need to trust the
application with access to all of their files.


\hr;


\p~ For more details, see the {\a href={html/index.html}: documentation}.
For quick reference, see the {\a href={html/man-pages.html}: man
pages}.

\p~ Table of contents:

{\ol:

\li\a href={html/introduction.html}- Introduction
\li\a href={html/shell.html}- The Plash shell
\li\a href={html/env.html}- Plash's restricted execution environment
\li\a href={html/exec-obj.html}- Executable objects
\li\a href={html/interfaces.html}- Protocols and interfaces
\li\a href={html/man-pages.html}- Manual pages
\li\a href={html/internal.html}- Internals
\li\a href={html/bugs-and-vulns.html}- Bugs and vulnerabilities

}

\p~ I'm in the process of converting the documentation to DocBook
format.  The older text files are also available here:
{\a href={README.txt}: README},
{\a href={NOTES.txt}: NOTES},
{\a href={NOTES.exec.txt}: NOTES.exec},
{\a href={protocols.txt}: protocols.txt},
{\a href={changelog.txt}: changelog}.

\p~ There is a {\a
href={http://lists.nongnu.org/mailman/listinfo/plash}: mailing list}.
To subscribe, e-mail {\a href={mailto:plash-request@nongnu.org}:
plash-request@nongnu.org} with "subscribe" in the subject line.
Another way to be notified of new releases is to subscribe to the
project on its {\a href={http://freshmeat.net/projects/plash/}:
Freshmeat page}.


\hr;

\h2- Installing Plash

\p~ There are three ways in which you might install Plash, depending
on how much you want to build from scratch.

\h3- Install pre-built packages

  {\p~ Debian and RPM packages are available, for i386 only.  The
  requirements are minimal.  Download here:

    \ul:
    {\li: Debian package:
       \a href={releases/plash_1.15_i386.deb}: plash_1.15_i386.deb}
    {\li: RPM package:
       \a href={releases/plash-1.15-1.i386.rpm}: plash-1.15-1.i386.rpm}
  }

\h3- Build Plash using pre-built glibc object files

  {\p~ You'll need to download the following files:

    {\ul:
      {\li: {\a href={releases/plash-1.15.tar.gz}: plash-1.15.tar.gz}, the Plash source}
      {\li: {\a href={releases/glibc-i386-objs-2.3.5_2.tar.gz}: glibc-i386-objs-2.3.5_2.tar.gz}, the pre-built glibc object files}
    }

  \p~ Then follow these steps:

  {\table border={1}:
   {\tr:
      {\td\pre: tar -xvzf plash-1.15.tar.gz}
      {\td: Unpack Plash source}}
   {\tr:
      {\td\pre:
cd plash-1.15
tar -xvzf ../glibc-i386-objs-2.3.5_2.tar.gz}
      {\td: Unpack glibc object files inside Plash build directory}}
   {\tr:
      {\td: Edit {\tt: src/config.sh}}
      {\td: Edit the configuration file {\tt: src/config.sh} if you want
     to change the installation directories.  You may need to change the
     {\tt: CC} parameter according to which version of gcc you have
     (eg. {\tt:gcc-3.3}).}}
   {\tr:
      {\td\pre: ./make.sh}
      {\td: Build Plash}}
   {\tr:
      {\td\pre: ./install.sh /}
      {\td: Install Plash.  This needs to be run as root.}}
  }

  \p~ Requirements:

  {\ul:

    \li~ A relatively recent version of binutils.  2.11 is too old;
    2.16 is okay.

    \li~ An i386 system: I have only built object files for i386.}

  \p~ Note that you {\em: don't} need to have glibc 2.3.5 installed on
  the host system.  Older versions are fine.  (As of October 2005,
  2.3.5 is the most recent glibc.)

  }

\h3- Build both Plash and glibc from source

  {\p~ This is more convoluted.  glibc requires a lot of resources to
  build.  See the {\a href={README.txt}: README} file for the details
  of how to do this.

  \p~ For this you would need to download:

    {\ul:
      {\li: {\a href={ftp://ftp.gnu.org/gnu/glibc/glibc-2.3.5.tar.bz2}: glibc-2.3.5.tar.bz2} (13Mb)}
      {\li: {\a href={ftp://ftp.gnu.org/gnu/glibc/glibc-linuxthreads-2.3.5.tar.gz}: glibc-linuxthreads-2.3.5.tar.gz} (~300k)}
    }

  }

\hr;



\h2- What Plash doesn't do

\p~ These things are currently out of scope for Plash:

\h3- X Window System security

  {\p~ Unfortunately, X does not provide any access control between X
  clients.  One client can take control of another client and pretend
  to be the user by sending key press events.  An X client can sniff
  key presses to see what the user is typing into another application.

  \p~ There is an "X Security Extension", but it's not very useful.  It
  only provides two protection domains, when we really need one per
  application.

  \p~ There is another extension, XSELinux, but this is specific to
  SELinux.  It uses XACE (X Access Control Extension), but this only
  provides hooks internal to the X server.  Using it requires
  modifying the X server.

  \p~ I expect that Plash will first provide X security by proxying the
  connection to the X server.

  }

\h3- Revocation of access to files

  {\p~ Plash sends kernel-level file descriptors to processes so that
  they can read from or write to files.  However, Linux doesn't
  provide any mechanism for revoking file descriptors.

  \p~ Revocation can be achieved by handing a revokable proxy for an
  object.  Plash could do this without kernel support by
  reimplementing file descriptors in terms of its own object system.
  This would mean replacing calls such as read() and write(), and it
  would have a performance impact.  It would be better to change Linux
  to provide revokable proxies for file descriptors.

  }

\h3- Confinement

  {\p~ Plash does not limit access to the network.  That's because
  the Linux kernel doesn't provide a way to do that.  Processes are
  still able to connect to and listen on network sockets.  This means
  two processes can easily conspire and communicate with each other.
  Plash just prevents one process from hijacking another, without its
  consent.

  \p~ With some straightforward kernel extensions to limit access to
  system calls, it would be easy to restrict network access.

  \p~ Overt channels such as network access can be closed off, but covert
  channels would still remain.  Reducing covert channels is harder.

  }

\h3- Resource accounting and preventing denial of service

  {\p~ Plash cannot limit the amount of disc space and memory that
  processes allocate because, again, the Linux kernel doesn't provide
  suitable mechanisms.  Plash's server processes don't try to limit
  what they consume on behalf of their clients, because the clients
  can deny service by other means.  Resource accounting would be hard
  to retrofit to the kernel; it really needs to be designed in from
  the start.

  \p~ Linux's disc space quota mechanism is based on user IDs and probably
  gets broken by Plash's use of dynamically allocated UIDs.

  }


\hr;


\a name=download;

\h2- Download previous versions


{\table width={100%} align=center border=1:

{\tr:
\th width={20%}- Version
\th width={35%}- Files
\th width={45%}- Description of changes
}

{\tr valign=top:
 \td- Version 1.15 \br; (12th December 2005)
 {\td\ul:
   {\li: Debian package:
     \a href={releases/plash_1.15_i386.deb}:
       plash_1.15_i386.deb}
   {\li: RPM:
     \a href={releases/plash-1.15-1.i386.rpm}:
       plash-1.15-1.i386.rpm}
   {\li: Source:
     \a href={releases/plash-1.15.tar.gz}:
       plash-1.15.tar.gz}
 }
 {\td:

Added Powerbox for Gtk.  Fixes to allow Konqueror and Gnumeric to run.

 }
}

{\tr valign=top:
 \td- Version 1.14 \br; (9th November 2005)
 {\td\ul:
   {\li: Debian package:
     \a href={releases/plash_1.14_i386.deb}:
       plash_1.14_i386.deb}
   {\li: RPM:
     \a href={releases/plash-1.14-1.i386.rpm}:
       plash-1.14-1.i386.rpm}
   {\li: Source:
     \a href={releases/plash-1.14.tar.gz}:
       plash-1.14.tar.gz}
 }
 {\td:

Added powerboxes.

 }
}

{\tr valign=top:
 \td- Version 1.13 \br; (6th October 2005)
 {\td\ul:
   {\li: Debian package:
     \a href={releases/plash_1.13_i386.deb}:
       plash_1.13_i386.deb}
   {\li: RPM:
     \a href={releases/plash-1.13-1.i386.rpm}:
       plash-1.13-1.i386.rpm}
   {\li: Source:
     \a href={releases/plash-1.13.tar.gz}:
       plash-1.13.tar.gz}
 }
 {\td:

Much-improved build system.

 }
}

{\tr valign=top:
 \td- Version 1.12 \br; (19th September 2005)
 {\td\ul:
   {\li: Debian package:
     \a href={releases/plash_1.12_i386.deb}:
       plash_1.12_i386.deb}
   {\li: RPM:
     \a href={releases/plash-1.12-1.i386.rpm}:
       plash-1.12-1.i386.rpm}
   {\li: Source:
     \a href={releases/plash-1.12.tar.gz}:
       plash-1.12.tar.gz}
 }
 {\td:

Initial version of pola-run.  Fixed gc-uid-locks race conditions.
Include libm.so etc. in packages.

 }
}

{\tr valign=top:
 \td- Version 1.11 \br; (13th August 2005)
 {\td\ul:
   {\li: Debian package:
     \a href={releases/plash_1.11_i386.deb}:
       plash_1.11_i386.deb}
   {\li: RPM:
     \a href={releases/plash-1.11-1.i386.rpm}:
       plash-1.11-1.i386.rpm}
   {\li: Source:
     \a href={releases/plash-1.11.tar.gz}:
       plash-1.11.tar.gz}
   {\li: Debian source package:
     {\a href={releases/plash_1.11.dsc}:
       plash_1.11.dsc},
     {\a href={http://savannah.nongnu.org/download/plash/plash_1.11.tar.gz}:
       plash_1.11.tar.gz}}
 }
 {\td:

Major new feature: Add plash-run-emacs tool.  Made changes so that
it's safer to run the shell as root.  Documentation has been improved,
and converted to DocBook format.

 }
}

{\tr valign=top:
 \td- Version 1.10 \br; (20th July 2005)
 {\td\ul:
   {\li: Debian package:
     \a href={releases/plash_1.10_i386.deb}:
       plash_1.10_i386.deb}
   {\li: RPM:
     \a href={releases/plash-1.10-1.i386.rpm}:
       plash-1.10-1.i386.rpm}
   {\li: Source:
     \a href={releases/plash-1.10.tar.gz}:
       plash-1.10.tar.gz}
 }
 {\td:

Implemented fchdir().  "rm -r", "install -d" and "mkdir -p" now work.

 }
}

{\tr valign=top:
 \td- Version 1.9 \br; (10th July 2005)
 {\td\ul:
   {\li: Debian package:
     \a href={releases/plash_1.9_i386.deb}:
       plash_1.9_i386.deb}
   {\li: RPM:
     \a href={releases/plash-1.9-1.i386.rpm}:
       plash-1.9-1.i386.rpm}
   {\li: Source:
     \a href={releases/plash-1.9.tar.gz}:
       plash-1.9.tar.gz}
   {\li: Debian source package:
     {\a href={http://www.cs.jhu.edu/~seaborn/plash/with-glibc/plash_1.9.dsc}:
       plash_1.9.dsc},
     {\a href={http://www.cs.jhu.edu/~seaborn/plash/with-glibc/plash_1.9.tar.gz}:
       plash_1.9.tar.gz}}
 }
 {\td:

Changed implementation of file namespace construction.  Now possible
to add/replace entries in existing directories (without modifying the
directory).

 }
}

{\tr valign=top:
 \td- Version 1.8 \br; (22nd May 2005)
 {\td\ul:
   {\li: Debian package:
     \a href={releases/plash_1.8_i386.deb}:
       plash_1.8_i386.deb}
   {\li: RPM:
     \a href={releases/plash-1.8-1.i386.rpm}:
       plash-1.8-1.i386.rpm}
   {\li: Source:
     \a href={releases/plash-1.8.tar.gz}:
       plash-1.8.tar.gz}
   {\li: Debian source package:
     {\a href={http://www.cs.jhu.edu/~seaborn/plash/with-glibc/plash_1.8.dsc}:
       plash_1.8.dsc},
     {\a href={http://www.cs.jhu.edu/~seaborn/plash/with-glibc/plash_1.8.tar.gz}:
       plash_1.8.tar.gz}}
 }
 {\td:

Overhauled build system for modified glibc.  Add option for granting
access to the X11 Window System (off by default).  New mechanism for
setting shell options.  Added limited support for directory file
descriptors, so that XEmacs works.

 }
}

{\tr valign=top:
 \td- Version 1.7 \br; (1st May 2005)
 {\td\ul:
   {\li: Debian package:
     \a href={releases/plash_1.7_i386.deb}:
       plash_1.7_i386.deb}
   {\li: RPM:
     \a href={releases/plash-1.7-1.i386.rpm}:
       plash-1.7-1.i386.rpm}
   {\li: Source:
     \a href={releases/plash-1.7.tar.gz}:
       plash-1.7.tar.gz}
 }
 {\td:
Major new feature: executable objects.
 }
}

{\tr valign=top:
 \td- Version 1.6 \br; (18th January 2005)
 {\td\ul:
   {\li: Debian package:
     \a href={releases/plash_1.6_i386.deb}:
       plash_1.6_i386.deb}
   {\li: RPM:
     \a href={releases/plash-1.6-1.i386.rpm}:
       plash-1.6-1.i386.rpm}
   {\li: Source:
     \a href={releases/plash-1.6.tar.gz}:
       plash-1.6.tar.gz}
 }
 {\td:
New argument syntax: "PATHNAME = EXPR", allowing objects to be attached
anywhere in the file namespace.
 }
}

{\tr valign=top:
 \td- Version 1.5 \br; (7th January 2005)
 {\td\ul:
   {\li: Debian package:
     \a href={releases/plash_1.5_i386.deb}:
       plash_1.5_i386.deb}
   {\li: RPM:
     \a href={releases/plash-1.5-1.i386.rpm}:
       plash-1.5-1.i386.rpm}
   {\li: Source:
     \a href={releases/plash-1.5.tar.gz}:
       plash-1.5.tar.gz}
 }
 {\td:
Add recursive read-only directories.  Add example "chroot" program:
first tool to use object-capability protocol.
 }
}

{\tr valign=top:
 \td- Version 1.4 \br; (4th January 2005)
 {\td\ul:
   {\li: Debian package:
     \a href={releases/plash_1.4_i386.deb}:
       plash_1.4_i386.deb}
   {\li: RPM:
     \a href={releases/plash-1.4-1.i386.rpm}:
       plash-1.4-1.i386.rpm}
   {\li: Source:
     \a href={releases/plash-1.4.tar.gz}:
       plash-1.4.tar.gz}
 }
 {\td:

Implemented object-capability protocol.  This is used as an additional
layer in the communication between client and server.

 }
}

{\tr valign=top:
 \td- Version 1.3 \br; (29th December 2004)
 {\td\ul:
   {\li: Debian package:
     \a href={releases/plash_1.3_i386.deb}:
       plash_1.3_i386.deb}
   {\li: RPM:
     \a href={releases/plash-1.3-1.i386.rpm}:
       plash-1.3-1.i386.rpm}
   {\li: Source:
     \a href={releases/plash-1.3.tar.gz}:
       plash-1.3.tar.gz}
 }
 {\td:

Better security: runs processes under dynamically-allocated user IDs
rather than the user "nobody".  Add globbing and file descriptor
redirection to the shell.  Implemented bind(), symlink(), utime(),
rename() and link().

 }
}

{\tr valign=top:
 \td- Version 1.2 \br; (18th December 2004)
 {\td\ul:
   {\li: Debian package:
     \a href={releases/plash_1.2_i386.deb}:
       plash_1.2_i386.deb}
   {\li: RPM:
     \a href={releases/plash-1.2-1.i386.rpm}:
       plash-1.2-1.i386.rpm}
   {\li: Source:
     \a href={releases/plash-1.2.tar.gz}:
       plash-1.2.tar.gz}
 }
 {\td:

Fixed open64() and libpthread.so.  Implemented pipes in the shell.
Added "!!" syntax to shell.  Added support for "#!" scripts.  Added
options window for enabling logging.

 }
}

{\tr valign=top:
 \td- Version 1.1 \br; (10th December 2004)
 {\td\ul:
   {\li: Debian package:
     \a href={releases/plash_1.1_i386.deb}:
       plash_1.1_i386.deb}
   {\li: RPM:
     \a href={releases/plash-1.1-1.i386.rpm}:
       plash-1.1-1.i386.rpm}
   {\li: Source:
     \a href={releases/plash-1.1.tar.gz}:
       plash-1.1.tar.gz}
 }
 {\td:
Added job control to shell.
 }
}

{\tr valign=top:
 \td- Version 1.0 \br; (7th December 2004)
 {\td\ul:
   {\li: Debian package:
     \a href={releases/plash_1.0_i386.deb}:
       plash_1.0_i386.deb}
   {\li: RPM:
     \a href={releases/plash-1.0-1.i386.rpm}:
       plash-1.0-1.i386.rpm}
   {\li: Source:
     \a href={releases/plash-1.0.tar.gz}:
       plash-1.0.tar.gz}
 }
 {\td: First version.}
}

}


\hr;

Mark Seaborn
\br;
{\a href={mailto:mseaborn@onetel.com}: mseaborn@onetel.com}

{\table width={100%}:
\tr:
\td\img src={logo-transfer-1.png};
\td\img src={logo-transfer-2.png};
\td\img src={logo-transfer-3.png};
\td\img src={logo-transfer-4.png};
}
